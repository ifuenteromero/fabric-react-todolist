{"version":3,"sources":["context/ToDoContext.js","components/AdderTask.js","components/FilterList.js","context/TaskItemContext.js","components/TaskItemEdit.js","components/TaskItemContent.js","components/TaskItem.js","components/TaskList.js","components/Summary.js","components/ThemeButton.js","utils/themePalettes.js","components/ThemeColors.js","components/ThemePanel.js","context/ThemeContext.js","index.js","ToDoApp.js"],"names":["ToDoContext","createContext","AdderTask","useContext","tasks","setTasks","useState","inputValue","setInputValue","handleClick","newTask","id","length","name","checked","concat","Stack","horizontal","SearchBox","placeholder","onChange","e","target","value","iconProps","iconName","className","onKeyPress","key","PrimaryButton","text","onClick","ariaLabel","FilterList","setFilter","numberTasks","numberActive","filter","item","numberCompleted","Pivot","onLinkClick","newFilter","props","headerText","PivotItem","itemIcon","itemCount","TaskItemContext","TaskItemProvider","children","editable","setEditable","Provider","TaskItemEdit","dataId","handleSave","event","horizontalAlign","TextField","idSelected","parseInt","getAttribute","indexSelected","findIndex","selected","newState","newSelected","data-id","DefaultButton","TaskItemContent","verticalAlign","Checkbox","label","index","objectSelected","newCheck","newTasks","IconButton","currentTarget","TaskItem","TaskList","filteredTasks","alert","map","Summary","leftTasks","tokens","childrenGap","ThemeButton","setVisiblePanel","ThemeContext","colorThemeCells","color","themeColor","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","getTheme","theme","getBackground","find","ThemeColors","setTheme","SwatchColorPicker","columnCount","cellHeight","cellWidth","selectedId","cellShape","colorCells","onColorChanged","ThemePanel","visiblePanel","Panel","isOpen","closeButtonAriaLabel","isLightDismiss","onDismiss","ThemeProvider","initializeIcons","ReactDOM","render","useEffect","document","body","style","setProperty","loadTheme","getElementById"],"mappings":"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","file":"static/js/main.3a66a9a0.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\r\n\r\nexport const ToDoContext = createContext();\r\n\r\nexport const ToDoProvider = ({children}) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filter, setFilter] = useState('all');\r\n    const [theme, setTheme] = useState('green');\r\n\r\n    return (\r\n        <ToDoContext.Provider value={{tasks, setTasks, filter, setFilter, theme, setTheme}}>\r\n            {children}\r\n        </ToDoContext.Provider>\r\n    )\r\n}","import React, {useContext, useState} from 'react';\r\nimport { Stack, PrimaryButton } from 'office-ui-fabric-react/';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\n\r\nexport default function AdderTask() {\r\n    const {tasks, setTasks} = useContext(ToDoContext);\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleClick = () => {\r\n        const lastId =  tasks.length ? tasks[tasks.length - 1].id : 0;\r\n        const newTask = {\r\n            id: lastId + 1,\r\n            name: inputValue,\r\n            checked: false,\r\n        }\r\n        setTasks(tasks.concat(newTask))\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Stack horizontal >\r\n                <SearchBox\r\n                    placeholder=\"Add tasks\"\r\n                    onChange={e => setInputValue(e.target.value)}\r\n                    iconProps={{ iconName: 'TaskSolid' }}\r\n                    className=\"borderRadius0\"\r\n                    value={inputValue}\r\n                    onKeyPress={(e) =>{ \r\n                    if(e.key==='Enter'){\r\n                        handleClick()\r\n                    }}\r\n                    }\r\n                />\r\n                <PrimaryButton \r\n                    text=\"Add\" \r\n                    iconProps={{ iconName: 'WaitlistConfirm' }}\r\n                    className=\"borderRadius0\"\r\n                    onClick={handleClick} \r\n                    ariaLabel=\"addTask\"\r\n                    className=\"btn--add\"\r\n                />\r\n            </Stack>\r\n        </>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Pivot,PivotItem } from 'office-ui-fabric-react/';\r\nimport {ToDoContext} from '../context/ToDoContext'\r\n\r\nexport default function FilterList() {\r\n    const {tasks,setFilter} = useContext(ToDoContext);\r\n    const handleFilter = ({props}) => {\r\n        const {headerText : newFilter} = props;\r\n        setFilter(newFilter);\r\n    }\r\n    const numberTasks = tasks.length;\r\n    const numberActive = tasks.filter(item => item.checked===false).length;\r\n    const numberCompleted = numberTasks - numberActive;\r\n    return (\r\n        <Pivot onLinkClick={handleFilter}  >\r\n            <PivotItem headerText=\"all\" itemIcon=\"AllApps\" itemCount={numberTasks}></PivotItem>\r\n            <PivotItem headerText=\"active\" itemIcon=\"Recent\" itemCount={numberActive} ></PivotItem>\r\n            <PivotItem headerText=\"completed\" itemIcon=\"Completed\" itemCount={numberCompleted} ></PivotItem>\r\n        </Pivot>\r\n    );\r\n}\r\n","import React, {createContext, useState} from 'react';\r\n\r\nexport const TaskItemContext = createContext();\r\n\r\nexport const TaskItemProvider = ({children}) => {\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    return (\r\n        <TaskItemContext.Provider value={{editable, setEditable}}>\r\n            {children}\r\n        </TaskItemContext.Provider>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Stack, TextField, DefaultButton } from 'office-ui-fabric-react/';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\nimport { TaskItemContext } from '../context/TaskItemContext';\r\n\r\nexport default function TaskItemEdit({name,dataId}) {\r\n    const {tasks, setTasks} = useContext(ToDoContext)\r\n    const  {setEditable} = useContext(TaskItemContext);\r\n\r\n    const handleChange = ({target}) => {\r\n        const idSelected = parseInt(target.getAttribute('data-id'));\r\n        const indexSelected = tasks.findIndex(item=>item.id===idSelected);\r\n        const selected = tasks[indexSelected];\r\n        const newState = [...tasks];\r\n        const newSelected = {...selected, name: target.value}\r\n        newState[indexSelected] = newSelected;\r\n        setTasks(newState);\r\n    }\r\n\r\n    const handleSave = (event) => {\r\n        setEditable(false)\r\n    }\r\n    \r\n    return (\r\n        <Stack horizontal horizontalAlign=\"space-between\">\r\n            <TextField \r\n                value={name} \r\n                onChange={handleChange} \r\n                data-id={dataId} \r\n                onKeyPress={(e) => { \r\n                    e.key==='Enter' && handleSave(e);\r\n                    }\r\n                }\r\n                />\r\n            <DefaultButton \r\n                text=\"Save\" \r\n                onClick={handleSave} \r\n                data-id={dataId}/>\r\n        </Stack>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Stack, Checkbox, IconButton } from 'office-ui-fabric-react/';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\nimport { TaskItemContext } from '../context/TaskItemContext';\r\n\r\nconst TaskItemContent = ({ name, checked, id, editable }) => {\r\n    const {tasks, setTasks} = useContext(ToDoContext);\r\n    const {setEditable} = useContext(TaskItemContext);\r\n\r\n    const handleCheck = (event) =>{\r\n        const idSelected = parseInt(event.target.id);\r\n        const index = tasks.findIndex(item => \r\n          item.id === idSelected\r\n        );\r\n        const objectSelected = tasks[index];\r\n        const newCheck = !objectSelected.checked;\r\n        objectSelected.checked = newCheck\r\n        tasks[index] = objectSelected\r\n        const newTasks = [...tasks];\r\n        setTasks(newTasks)\r\n    }\r\n    \r\n    const handleDelete = (event) => {\r\n        const idSelected = parseInt(event.currentTarget.getAttribute('data-id'))\r\n        const newState = tasks.filter(item =>\r\n        item.id !== idSelected\r\n        )\r\n        setTasks(newState)\r\n    }\r\n\r\n    const handleEdit = (event) => {\r\n        setEditable(true);\r\n    }\r\n\r\n    return ( \r\n        <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\" >\r\n            <Checkbox label={name} onChange={handleCheck} checked={ checked } id={id}/>\r\n            <Stack horizontal>\r\n                <IconButton iconProps={{ iconName: 'Edit' }} onClick = {handleEdit} ariaLabel=\"Edit\" data-id={id}/>\r\n                <IconButton iconProps={{ iconName: 'Delete' }} onClick={handleDelete} ariaLabel=\"Delete\" data-id={id}/>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n\r\n}\r\n \r\nexport default TaskItemContent;","import React,{useContext} from 'react';\r\nimport TaskItemEdit from './TaskItemEdit';\r\nimport TaskItemContent from './TaskItemContent';\r\nimport { TaskItemContext } from '../context/TaskItemContext';\r\n\r\nexport default function TaskItem({ name, checked, id }) {\r\n    const {editable} = useContext(TaskItemContext);\r\n    return (\r\n        <>\r\n            {!editable\r\n                && \r\n            <TaskItemContent \r\n                name={name}\r\n                checked={checked}\r\n                id={id}\r\n                data-id={id}\r\n\r\n            />}  \r\n            {editable&&<TaskItemEdit name={name} dataId={id}/>} \r\n        </>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\nimport {TaskItemProvider} from '../context/TaskItemContext'\r\n\r\nexport default function TaskList() {\r\n    const {tasks,filter} = useContext(ToDoContext);\r\n\r\n    let filteredTasks;\r\n    switch(filter) {\r\n        \r\n        case \"all\":\r\n            filteredTasks = tasks;\r\n            break;\r\n        case \"active\":\r\n            filteredTasks = tasks.filter(item => item.checked===false);\r\n            break;\r\n        case \"completed\":\r\n            filteredTasks = tasks.filter(item=>item.checked===true);\r\n            break;\r\n        default:\r\n            alert(\"error\")\r\n    }\r\n   \r\n    return (\r\n        <ul>\r\n        {filteredTasks\r\n            .map(item=> {\r\n                return(  \r\n                    <TaskItemProvider key={item.id} >           \r\n                        <li \r\n                        className=\"todo-list__element\" \r\n                        >\r\n                            <TaskItem \r\n                                name={item.name} \r\n                                checked={item.checked} \r\n                                id={item.id} \r\n                            />\r\n                        </li>\r\n                    </TaskItemProvider>\r\n                )\r\n            })         \r\n        }\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport { Stack, DefaultButton } from 'office-ui-fabric-react/';\r\nimport { ToDoContext } from '../context/ToDoContext';\r\n\r\n\r\nexport default function Summary() {\r\n    const {tasks, setTasks} = useContext(ToDoContext);\r\n    const leftTasks = tasks.filter(item => item.checked===false)\r\n    const handleClear = () => {\r\n        const newTasks = tasks.filter(item => item.checked===false);\r\n        setTasks(newTasks);\r\n    }\r\n    return (\r\n        <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" tokens={{childrenGap:'2%'} }>\r\n            <p>{leftTasks.length} items left</p>   \r\n            <DefaultButton text=\"Clear Completed\" onClick={handleClear} />\r\n        </Stack>\r\n    );\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\n\r\nconst ThemeButton = () => {\r\n    const {setVisiblePanel} = useContext(ThemeContext)\r\n    return (  \r\n        <DefaultButton \r\n            text=\"Theme\"  \r\n            iconProps={{ iconName: 'Color' }}\r\n            onClick={()=>{ setVisiblePanel(true) }}\r\n        />\r\n\r\n    );\r\n}\r\n \r\nexport default ThemeButton;","const themeGreen={\r\n    palette: {\r\n        themePrimary: '#00783e',\r\n        themeLighterAlt: '#f0faf5',\r\n        themeLighter: '#c4e9d7',\r\n        themeLight: '#96d6b7',\r\n        themeTertiary: '#46ae7b',\r\n        themeSecondary: '#10884e',\r\n        themeDarkAlt: '#006c38',\r\n        themeDark: '#005b2f',\r\n        themeDarker: '#004323',\r\n        neutralLighterAlt: '#f8f8f8',\r\n        neutralLighter: '#f4f4f4',\r\n        neutralLight: '#eaeaea',\r\n        neutralQuaternaryAlt: '#dadada',\r\n        neutralQuaternary: '#d0d0d0',\r\n        neutralTertiaryAlt: '#c8c8c8',\r\n        neutralTertiary: '#e0e0e0',\r\n        neutralSecondary: '#c0c0c0',\r\n        neutralPrimaryAlt: '#a3a3a3',\r\n        neutralPrimary: '#979797',\r\n        neutralDark: '#727272',\r\n        black: '#545454',\r\n        white: '#ffffff',\r\n    }\r\n}\r\nconst themeDark = {\r\n    palette: {\r\n        themePrimary: '#00783e',\r\n        themeLighterAlt: '#000502',\r\n        themeLighter: '#00130a',\r\n        themeLight: '#002413',\r\n        themeTertiary: '#004825',\r\n        themeSecondary: '#006936',\r\n        themeDarkAlt: '#0d854b',\r\n        themeDark: '#259860',\r\n        themeDarker: '#4fb383',\r\n        neutralLighterAlt: '#323130',\r\n        neutralLighter: '#31302f',\r\n        neutralLight: '#2f2e2d',\r\n        neutralQuaternaryAlt: '#2c2b2a',\r\n        neutralQuaternary: '#2a2928',\r\n        neutralTertiaryAlt: '#282726',\r\n        neutralTertiary: '#c8c8c8',\r\n        neutralSecondary: '#d0d0d0',\r\n        neutralPrimaryAlt: '#dadada',\r\n        neutralPrimary: '#ffffff',\r\n        neutralDark: '#f4f4f4',\r\n        black: '#f8f8f8',\r\n        white: '#999',\r\n    }\r\n} \r\n\r\nconst themeMostaza =  {\r\n    palette: {\r\n        themePrimary: '#d40049',\r\n        themeLighterAlt: '#080003',\r\n        themeLighter: '#22000c',\r\n        themeLight: '#3f0016',\r\n        themeTertiary: '#7f002c',\r\n        themeSecondary: '#ba0040',\r\n        themeDarkAlt: '#d81659',\r\n        themeDark: '#de356f',\r\n        themeDarker: '#e76692',\r\n        neutralLighterAlt: '#dbbe2a',\r\n        neutralLighter: '#ddc032',\r\n        neutralLight: '#dfc43e',\r\n        neutralQuaternaryAlt: '#e0c746',\r\n        neutralQuaternary: '#e2c94c',\r\n        neutralTertiaryAlt: '#e7d168',\r\n        neutralTertiary: '#c8c8c8',\r\n        neutralSecondary: '#d0d0d0',\r\n        neutralPrimaryAlt: '#dadada',\r\n        neutralPrimary: '#ffffff',\r\n        neutralDark: '#f4f4f4',\r\n        black: '#f8f8f8',\r\n        white: '#d9bb22',\r\n    }\r\n}\r\n\r\nconst themeFosfo = {\r\n    palette: {\r\n        themePrimary: '#252527',\r\n        themeLighterAlt: '#040405',\r\n        themeLighter: '#090909',\r\n        themeLight: '#0d0d0d',\r\n        themeTertiary: '#111112',\r\n        themeSecondary: '#151516',\r\n        themeDarkAlt: '#19191a',\r\n        themeDark: '#1d1d1f',\r\n        themeDarker: '#212123',\r\n        neutralLighterAlt: '#4bdb2a',\r\n        neutralLighter: '#51dd32',\r\n        neutralLight: '#5cdf3e',\r\n        neutralQuaternaryAlt: '#62e046',\r\n        neutralQuaternary: '#68e24c',\r\n        neutralTertiaryAlt: '#7fe768',\r\n        neutralTertiary: '#480505',\r\n        neutralSecondary: '#910a0a',\r\n        neutralPrimaryAlt: '#d50f0f',\r\n        neutralPrimary: '#f21111',\r\n        neutralDark: '#f54848',\r\n        black: '#f77777',\r\n        white: '#44d922',\r\n    }\r\n}\r\n\r\nconst themeElvira = {\r\n    palette: {\r\n      themePrimary: '#00a9d3',\r\n      themeLighterAlt: '#000708',\r\n      themeLighter: '#001b22',\r\n      themeLight: '#00333f',\r\n      themeTertiary: '#00657e',\r\n      themeSecondary: '#0094b9',\r\n      themeDarkAlt: '#16b0d7',\r\n      themeDark: '#35bcdd',\r\n      themeDarker: '#65cce6',\r\n      neutralLighterAlt: '#e1f8f6',\r\n      neutralLighter: '#ddf4f2',\r\n      neutralLight: '#d4eae8',\r\n      neutralQuaternaryAlt: '#c5dad8',\r\n      neutralQuaternary: '#bcd0ce',\r\n      neutralTertiaryAlt: '#b5c8c6',\r\n      neutralTertiary: '#080808',\r\n      neutralSecondary: '#0a0a0a',\r\n      neutralPrimaryAlt: '#0c0c0c',\r\n      neutralPrimary: '#161616',\r\n      neutralDark: '#111111',\r\n      black: '#141414',\r\n      white: '#e7fffd',\r\n    }\r\n  }\r\n\r\nexport  const colorThemeCells = [\r\n    { id: 'green', label: 'green', color: '#00783e',themeColor:themeGreen },\r\n    { id: 'dark', label: 'dark', color: '#323130',themeColor:themeDark},\r\n    { id: 'mostaza', label: 'mostaza', color: '#d9bb22',themeColor:themeMostaza },\r\n    { id: 'fosfo', label: 'fosfo', color: '#44d922',themeColor:themeFosfo },\r\n    { id: 'elvira', label: 'elvira', color: '#e7fffd',themeColor:themeElvira },\r\n];\r\n\r\nexport const getTheme = (theme) => {\r\n    const index = colorThemeCells.findIndex(item => item.id===theme);\r\n    const color = colorThemeCells[index].themeColor\r\n    return color;\r\n}\r\n\r\nexport const getBackground = (theme) => {\r\n    const themeBackground = colorThemeCells.find(item=>item.id===theme).themeColor.palette.white;\r\n    return themeBackground;\r\n}","import React,{useContext} from 'react';\r\nimport { colorThemeCells } from '../utils/themePalettes';\r\nimport { SwatchColorPicker } from 'office-ui-fabric-react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\n\r\nconst ThemeColors = () => {\r\n    const {theme, setTheme} = useContext(ThemeContext);\r\n\r\n    return ( \r\n        <SwatchColorPicker\r\n                columnCount={1}\r\n                cellHeight={35}\r\n                cellWidth={35}\r\n                selectedId={theme}\r\n                cellShape={'square'}\r\n                colorCells={colorThemeCells}\r\n                onColorChanged={(id, color) => setTheme(id)}\r\n        />\r\n     );\r\n}\r\n \r\nexport default ThemeColors;","import React, {useContext} from 'react';\r\nimport { Panel } from 'office-ui-fabric-react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\nimport ThemeColors from './ThemeColors';\r\n\r\nconst ThemePanel = () => {\r\n    const {visiblePanel, setVisiblePanel} = useContext(ThemeContext);\r\n\r\n    return (  \r\n        <Panel\r\n            isOpen={visiblePanel}\r\n            closeButtonAriaLabel=\"Close\"\r\n            isLightDismiss={true}\r\n            headerText=\"Choose your theme\"\r\n            onDismiss={()=>{setVisiblePanel(false)}}\r\n            >\r\n            <ThemeColors />\r\n        </Panel>\r\n    );\r\n}\r\n \r\nexport default ThemePanel;","import React, {createContext, useState, useContext} from 'react';\r\nimport ThemeButton from '../components/ThemeButton';\r\nimport ThemePanel from '../components/ThemePanel';\r\nimport {ToDoContext} from './ToDoContext'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({children}) => {\r\n    const [visiblePanel, setVisiblePanel] = useState(false);\r\n    const {theme, setTheme} = useContext(ToDoContext);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{visiblePanel, setVisiblePanel, setTheme, theme}}>\r\n            <ThemeButton />\r\n            <ThemePanel />\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ToDoApp from './ToDoApp';\nimport {ToDoProvider} from './context/ToDoContext'\nimport { initializeIcons } from '@uifabric/icons';\n//import Layout from './components/Layout';\n//import StyledSpinButton from  './components/StyledSpinButton';\ninitializeIcons();\n\nReactDOM.render(\n    <ToDoProvider>\n        <ToDoApp />\n    </ToDoProvider>\n, document.getElementById('root'));\n\n// ReactDOM.render(\n//    <Layout />\n// , document.getElementById('root'));","import React, {useContext, useEffect} from 'react';\nimport './App.css';\nimport AdderTask from './components/AdderTask';\nimport FilterList from './components/FilterList';\nimport TaskList from './components/TaskList';\nimport Summary from './components/Summary';\nimport { loadTheme } from 'office-ui-fabric-react/lib/Styling';\nimport { ThemeProvider } from './context/ThemeContext';\nimport {ToDoContext} from './context/ToDoContext'\nimport { getTheme,getBackground  } from './utils/themePalettes';\n\nexport default function ToDoApp() {\n    const {theme} = useContext(ToDoContext);\n    \n    useEffect(\n        ()=>{\n            const color = getTheme(theme);\n            \n            document.body.style.setProperty(\"background-color\", getBackground(theme));\n            loadTheme(color);\n        }\n    ,[theme]);\n\n    return (\n        <div >\n            <h1>\n            ToDos\n            </h1>\n            <ThemeProvider/>\n            <AdderTask />\n            <FilterList />\n            <TaskList />\n            <Summary />\n        </div>\n    );\n}\n"],"sourceRoot":""}